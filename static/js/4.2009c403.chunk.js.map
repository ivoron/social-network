{"version":3,"sources":["Components/Content/Dialogs/Dialog.tsx","Components/Content/Dialogs/Chat.tsx","Components/Content/Dialogs/Dialogs.tsx","Components/Content/Dialogs/DialogsContainer.tsx"],"names":["Chat","props","path","personId","to","personName","message","Dialogs","dialogsPage","sendMessage","dialogElements","dialogs","map","user","key","id","name","messageElements","messages","item","MessageForm","reduxForm","form","handleSubmit","onSubmit","Field","component","placeholder","className","formData","compose","connect","state","withRedirect"],"mappings":"2KAGe,SAASA,EAAKC,GAC3B,IAAIC,EAAO,YAAcD,EAAME,SAC/B,OACE,6BACE,4BACE,kBAAC,IAAD,CAASC,GAAIF,GAAOD,EAAMI,cCNnB,SAASL,EAAKC,GAC3B,OACE,6BACE,8BAAOA,EAAMK,SADf,IAC+B,8B,sBCmDpBC,EA3CsB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC/CC,EAAiBF,EAAYG,QAAQC,KAAI,SAACC,GAAD,OAC3C,kBAAC,EAAD,CAAQC,IAAKD,EAAKE,GAAIZ,SAAUU,EAAKE,GAAIV,WAAYQ,EAAKG,UAExDC,EAAkBT,EAAYU,SAASN,KAAI,SAACO,GAAD,OAC7C,kBAAC,EAAD,CAAML,IAAKK,EAAKJ,GAAIT,QAASa,EAAKb,aAoB9Bc,EAAcC,YAA+B,CACjDC,KAAM,gBADYD,EAhBqD,SAAC,GAEnE,IADLE,EACI,EADJA,aAEA,OACE,0BAAMC,SAAUD,GACd,kBAACE,EAAA,EAAD,CACET,KAAM,UACNU,UAAW,WACXC,YAAa,qBACbC,UAAU,eAEZ,6BACA,4CAUN,OACE,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACb,4BAAKlB,IAEP,yBAAKkB,UAAU,YACb,yBAAKA,UAAU,aAAaX,GAC5B,kBAACG,EAAD,CAAaI,SAVF,SAACK,GAChBpB,EAAYoB,EAASvB,e,sCC5BVwB,sBACbC,aAPsB,SAACC,GACvB,MAAO,CACLxB,YAAawB,EAAMxB,eAKI,CACvBC,kBAEFwB,IAJaH,CAKbvB","file":"static/js/4.2009c403.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Chat(props: PropsType) {\r\n  let path = \"/dialogs/\" + props.personId;\r\n  return (\r\n    <div>\r\n      <li>\r\n        <NavLink to={path}>{props.personName}</NavLink>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\ntype PropsType = {\r\n  personId: number\r\n  personName: string\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Chat(props: PropsType) {\r\n  return (\r\n    <div>\r\n      <span>{props.message}</span> <br />\r\n    </div>\r\n  );\r\n}\r\ntype PropsType = {\r\n  message: string;\r\n};\r\n","import React from \"react\";\r\nimport Dialog from \"./Dialog\";\r\nimport Chat from \"./Chat\";\r\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\";\r\nimport { InitStateType } from \"../../../Store/dialogsReducer\";\r\n\r\ntype PropsType = {\r\n  dialogsPage: InitStateType;\r\n  sendMessage: (message: string) => void;\r\n};\r\ntype MessageFormDataType = {\r\n  message: string;\r\n};\r\nconst Dialogs: React.FC<PropsType> = ({ dialogsPage, sendMessage }) => {\r\n  let dialogElements = dialogsPage.dialogs.map((user) => (\r\n    <Dialog key={user.id} personId={user.id} personName={user.name} />\r\n  )); // список диалогов из стора\r\n  let messageElements = dialogsPage.messages.map((item) => (\r\n    <Chat key={item.id} message={item.message} />\r\n  )); // список сообщений из стора\r\n\r\n  // форма добавления сообщений\r\n  const AddMessageForm: React.FC<InjectedFormProps<MessageFormDataType>> = ({\r\n    handleSubmit,\r\n  }) => {\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <Field\r\n          name={\"message\"}\r\n          component={\"textarea\"}\r\n          placeholder={\"enter your message\"}\r\n          className=\"addMessage\"\r\n        />\r\n        <br />\r\n        <button>send</button>\r\n      </form>\r\n    );\r\n  };\r\n  const MessageForm = reduxForm<MessageFormDataType>({\r\n    form: \"send-message\",\r\n  })(AddMessageForm);\r\n  const onSubmit = (formData: MessageFormDataType) => {\r\n    sendMessage(formData.message);\r\n  };\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"chatItems\">\r\n        <ul>{dialogElements}</ul>\r\n      </div>\r\n      <div className=\"chatBody\">\r\n        <div className=\"chatField\">{messageElements}</div>\r\n        <MessageForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { sendMessage } from \"../../../Store/dialogsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport withRedirect from \"../../../HOC/withRedirect\";\r\nimport { compose } from \"redux\";\r\nimport \"./dialogs.css\";\r\nimport { AppStateType } from \"../../../Store/redux-store\";\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}